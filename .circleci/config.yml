version: 2.1
orbs:
  python: circleci/python@2.0.3
  aws-cli: circleci/aws-cli@3.1.4
  ansible-playbook: orbss/ansible-playbook@0.0.5
jobs:
  cfn-lint:
    executor: python/default
    steps:
      - checkout
      - run: pip install cfn-lint
      - run:
          name: run cfn-lint
          command: |
            cfn-lint -i W3002 -t cloudformation/*.yml
  executeCloudFormation:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run: 
          name: deploy Cloudformation
          command: |
            set -x
            aws cloudformation deploy --template cloudformation/lecture10VPC.yml --stack-name VPCtest
            aws cloudformation deploy --template cloudformation/lecture10SG.yml --stack-name SGtest
            aws cloudformation deploy --template cloudformation/lecture10EC2.yml --stack-name EC2test2
  executeAnsible:
    executor: ansible-playbook/default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 2f:f8:f2:1f:3b:9f:71:60:d1:96:32:28:c6:c2:28:4c
      - ansible-playbook/install:
          version: '2.10.7'
      - ansible-playbook/playbook:
          playbook: ansible/playbook.yml
          playbook-options: '-u ec2-user -i ansible/hosts/inventory --private-key ~/.ssh/id_rsa'
workflows:
  raisetech:
    jobs:
      - cfn-lint
      - executeCloudFormation:
          requires:
            - cfn-lint
      - executeAnsible:
          requires:
            - executeCloudFormation